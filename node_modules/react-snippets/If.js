'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Empty = require('./Empty');

var _Empty2 = _interopRequireDefault(_Empty);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var func = _react.PropTypes.func,
    any = _react.PropTypes.any,
    object = _react.PropTypes.object,
    string = _react.PropTypes.string;

var defaultComment = 'falsy render condition';

var If = function (_Component) {
    (0, _inherits3.default)(If, _Component);

    function If() {
        (0, _classCallCheck3.default)(this, If);
        return (0, _possibleConstructorReturn3.default)(this, (If.__proto__ || (0, _getPrototypeOf2.default)(If)).apply(this, arguments));
    }

    (0, _createClass3.default)(If, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                is = _props.is,
                render = _props.render,
                elseRender = _props.elseRender,
                props = _props.props,
                comment = _props.comment;

            var Component = is ? render : elseRender;

            if ((0, _utils.isComponent)(Component)) {
                return _react2.default.createElement(Component, props);
            }
            if (typeof Component === 'function') {
                return Component(props);
            }

            return _react2.default.createElement(_Empty2.default, { comment: comment });
        }
    }]);
    return If;
}(_react.Component);

If.propTypes = {
    is: any,

    render: func.isRequired,
    elseRender: func,

    props: object,
    comment: string
};
If.defaultProps = {
    props: {},
    comment: defaultComment
};
exports.default = If;