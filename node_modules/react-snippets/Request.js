'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Await = require('./Await');

var _Await2 = _interopRequireDefault(_Await);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var string = _react.PropTypes.string,
    object = _react.PropTypes.object,
    func = _react.PropTypes.func,
    bool = _react.PropTypes.bool;

var Request = function (_Component) {
    (0, _inherits3.default)(Request, _Component);

    function Request() {
        var _ref;

        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Request);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Request.__proto__ || (0, _getPrototypeOf2.default)(Request)).call.apply(_ref, [this].concat(args))), _this), _this.onStart = function (resolve, reject) {
            var _this$props = _this.props,
                url = _this$props.url,
                method = _this$props.method,
                _this$props$query = _this$props.query,
                query = _this$props$query === undefined ? {} : _this$props$query,
                _this$props$data = _this$props.data,
                data = _this$props$data === undefined ? null : _this$props$data,
                _this$props$headers = _this$props.headers,
                headers = _this$props$headers === undefined ? {} : _this$props$headers,
                username = _this$props.username,
                password = _this$props.password,
                onStart = _this$props.onStart,
                onProgress = _this$props.onProgress;

            var options = {
                url: url,
                query: query,
                method: method,
                data: data,
                headers: headers,
                username: username,
                password: password,
                onStart: onStart,
                onProgress: onProgress,
                onSuccess: resolve,
                onError: reject
            };
            var xhr = (0, _utils.request)(options);
            _this.setState({ xhr: xhr });
        }, _this.onCancel = function () {
            if (_this.state.xhr !== XMLHttpRequest.DONE) {
                _this.state.xhr.abort();
            }
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    (0, _createClass3.default)(Request, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                renderComplete = _props.renderComplete,
                renderPending = _props.renderPending,
                onSuccess = _props.onSuccess,
                onError = _props.onError;

            return _react2.default.createElement(_Await2.default, {
                renderComplete: renderComplete,
                renderPending: renderPending,
                onStart: this.onStart,
                onSuccess: onSuccess,
                onError: onError,
                onCancel: this.onCancel
            });
        }
    }]);
    return Request;
}(_react.Component);

Request.propTypes = {
    url: string.isRequired,
    method: string,
    headers: object,
    query: object,
    data: string,
    withCredentials: bool,
    username: string,
    password: string,

    renderComplete: func.isRequired,
    renderPending: func.isRequired,

    onStart: func,
    onProgress: func,
    onSuccess: func,
    onError: func,
    onCancel: func
};
Request.defaultProps = {
    method: 'GET',
    headers: {},
    data: null,
    withCredentials: true,
    onStart: function onStart() {},
    onProgress: function onProgress() {},
    onSuccess: function onSuccess() {},
    onError: function onError() {},
    onCancel: function onCancel() {}
};
exports.default = Request;