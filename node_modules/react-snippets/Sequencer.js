'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _symbol = require('babel-runtime/core-js/symbol');

var _symbol2 = _interopRequireDefault(_symbol);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Await = require('./Await');

var _Await2 = _interopRequireDefault(_Await);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var func = _react.PropTypes.func,
    arrayOf = _react.PropTypes.arrayOf;

var _Cancel = (0, _symbol2.default)('cancel');

function _sequencer(actions, setCancel) {
    var results = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

    if (!actions.length) return _promise2.default.resolve(results);
    var fn = actions.shift();

    var _PromiseCancelable = (0, _utils.PromiseCancelable)(function (resolve, reject) {
        fn().then(resolve).catch(reject);
    }),
        promise = _PromiseCancelable.promise,
        cancel = _PromiseCancelable.cancel;

    setCancel(cancel);
    return promise.then(function (result) {
        return _sequencer(actions, setCancel, [].concat((0, _toConsumableArray3.default)(results), [result]));
    });
}

var Sequencer = function (_Component) {
    (0, _inherits3.default)(Sequencer, _Component);

    function Sequencer() {
        var _ref;

        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Sequencer);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Sequencer.__proto__ || (0, _getPrototypeOf2.default)(Sequencer)).call.apply(_ref, [this].concat(args))), _this), _this.onStart = function (resolve, reject) {
            var _this$props = _this.props,
                actions = _this$props.actions,
                onStart = _this$props.onStart;

            if (onStart) {
                onStart(resolve, reject);
            }
            _sequencer(actions, function (cancel) {
                return _this[_Cancel] = cancel;
            }).then(resolve).catch(reject);
        }, _this.onCancel = function (error) {
            _this[_Cancel](error);
            var onCancel = _this.props.onCancel;

            if (onCancel) {
                onCancel(error);
            }
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    (0, _createClass3.default)(Sequencer, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                renderComplete = _props.renderComplete,
                renderPending = _props.renderPending,
                onSuccess = _props.onSuccess,
                onError = _props.onError;

            return _react2.default.createElement(_Await2.default, {
                renderComplete: renderComplete,
                renderPending: renderPending,
                onStart: this.onStart,
                onSuccess: onSuccess,
                onError: onError,
                onCancel: this.onCancel
            });
        }
    }]);
    return Sequencer;
}(_react.Component);

Sequencer.propTypes = {
    actions: arrayOf(func).isRequired,

    renderComplete: func.isRequired,
    renderPending: func.isRequired,

    onStart: func,
    onSuccess: func,
    onError: func,
    onCancel: func
};
exports.default = Sequencer;